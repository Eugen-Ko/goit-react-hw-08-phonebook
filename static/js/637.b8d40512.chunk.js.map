{"version":3,"file":"static/js/637.b8d40512.chunk.js","mappings":"4OAOaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MACf,OACE,+BACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACR,IAAMC,EAAS,GAaf,OAZKD,EAAOH,MAGT,4CAA4CK,KAAKF,EAAOH,SAEzDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMZG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAClCF,EAAOH,SAAW,oBAFlBG,EAAOH,SAAW,WAIbG,GAETG,SAAU,cAA6C,IAA1CP,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,UAClBO,EADoD,EAApBA,gBAClB,GACdb,EAASc,EAAAA,GAAAA,MAAqB,CAAET,MAAAA,EAAOC,SAAAA,MAvB3C,SA0BG,gBAAGS,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAf,OACC,SAAC,IAAD,CACEC,GAAI,CACFC,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAC3BC,QAAS,OACTC,eAAgB,UAJpB,UAOE,UAAC,KAAD,YACE,SAAC,IAAD,CAAKL,GAAI,CAAEM,OAAQ,OAAQC,UAAW,QAAtC,UACE,SAAC,KAAD,CACEC,UAAWC,EAAAA,EACXC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,KAAK,aAGT,SAAC,IAAD,CAAKb,GAAI,CAAEM,OAAQ,QAAnB,UACE,SAAC,KAAD,CACEE,UAAWC,EAAAA,EACXE,KAAK,WACLC,MAAM,WACNF,KAAK,WACLG,KAAK,aAGT,UAAC,IAAD,CAAKb,GAAI,CAAEI,QAAS,OAAQC,eAAgB,UAA5C,WACE,SAAC,IAAD,CACES,QAAQ,YACRC,MAAM,UACNC,SAAUjB,EACVkB,QAASnB,EACTE,GAAI,CAAEkB,YAAa,QALrB,oBASA,SAAC,IAAD,CACEJ,QAAQ,YACRC,MAAM,UACNE,QAAS,WACPhC,EAAS,MAJb","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Button, Box } from '@mui/material';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-mui';\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'Required';\n          } else if (values.password.length < 7) {\n            errors.password = 'Invalid password';\n          }\n          return errors;\n        }}\n        onSubmit={({ email, password }, { setSubmitting }) => {\n          setSubmitting(false);\n          dispatch(authOperations.logIn({ email, password }));\n        }}\n      >\n        {({ submitForm, isSubmitting }) => (\n          <Box\n            sx={{\n              padding: { xs: '16px', sm: '24px' },\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Form>\n              <Box sx={{ height: '75px', marginTop: '15px' }}>\n                <Field\n                  component={TextField}\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  size=\"small\"\n                />\n              </Box>\n              <Box sx={{ height: '75px' }}>\n                <Field\n                  component={TextField}\n                  type=\"password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  size=\"small\"\n                />\n              </Box>\n              <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  onClick={submitForm}\n                  sx={{ marginRight: '16px' }}\n                >\n                  Login\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    navigate('/');\n                  }}\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Form>\n          </Box>\n        )}\n      </Formik>\n    </>\n  );\n};\n"],"names":["LoginPage","dispatch","useDispatch","navigate","useNavigate","initialValues","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","authOperations","submitForm","isSubmitting","sx","padding","xs","sm","display","justifyContent","height","marginTop","component","TextField","name","type","label","size","variant","color","disabled","onClick","marginRight"],"sourceRoot":""}