{"version":3,"file":"static/js/432.7989c07c.chunk.js","mappings":"+OAOaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MACf,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACR,IAAMC,EAAS,GAgBf,OAfKD,EAAOJ,OACVK,EAAOL,KAAO,YAEXI,EAAOH,MAGT,4CAA4CK,KAAKF,EAAOH,SAEzDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMZG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAClCF,EAAOH,SAAW,4BAFlBG,EAAOH,SAAW,WAIbG,GAETG,SAAU,cAAmD,IAAhDR,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,UACxBO,EAD0D,EAApBA,gBACxB,GACdd,EAASe,EAAAA,GAAAA,SAAwB,CAAEV,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,MA3BpD,SA8BG,gBAAGS,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAf,OACC,SAAC,IAAD,CACEC,GAAI,CACFC,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAC3BC,QAAS,OACTC,eAAgB,UAJpB,UAOE,UAAC,KAAD,YACE,SAAC,IAAD,CAAKL,GAAI,CAAEM,OAAQ,OAAQC,UAAW,QAAtC,UACE,SAAC,KAAD,CACEC,UAAWC,EAAAA,EACXtB,KAAK,OACLuB,KAAK,OACLC,MAAM,OACNC,KAAK,aAGT,SAAC,IAAD,CAAKZ,GAAI,CAAEM,OAAQ,QAAnB,UACE,SAAC,KAAD,CACEE,UAAWC,EAAAA,EACXtB,KAAK,QACLuB,KAAK,QACLC,MAAM,QACNC,KAAK,aAGT,SAAC,IAAD,CAAKZ,GAAI,CAAEM,OAAQ,QAAnB,UACE,SAAC,KAAD,CACEE,UAAWC,EAAAA,EACXC,KAAK,WACLC,MAAM,WACNxB,KAAK,WACLyB,KAAK,aAGT,UAAC,IAAD,CAAKZ,GAAI,CAAEI,QAAS,OAAQC,eAAgB,UAA5C,WACE,SAAC,IAAD,CACEQ,QAAQ,YACRC,MAAM,UACNC,SAAUhB,EACViB,QAASlB,EACTE,GAAI,CAAEiB,YAAa,QALrB,uBASA,SAAC,IAAD,CACEJ,QAAQ,YACRC,MAAM,UACNE,QAAS,WACPhC,EAAS,MAJb","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Button, Box } from '@mui/material';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-mui';\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validate={values => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = 'Required';\n        }\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        if (!values.password) {\n          errors.password = 'Required';\n        } else if (values.password.length < 7) {\n          errors.password = 'Input more then 7 symbol';\n        }\n        return errors;\n      }}\n      onSubmit={({ name, email, password }, { setSubmitting }) => {\n        setSubmitting(false);\n        dispatch(authOperations.register({ name, email, password }));\n      }}\n    >\n      {({ submitForm, isSubmitting }) => (\n        <Box\n          sx={{\n            padding: { xs: '16px', sm: '24px' },\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <Form>\n            <Box sx={{ height: '75px', marginTop: '15px' }}>\n              <Field\n                component={TextField}\n                name=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                size=\"small\"\n              />\n            </Box>\n            <Box sx={{ height: '75px' }}>\n              <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                size=\"small\"\n              />\n            </Box>\n            <Box sx={{ height: '75px' }}>\n              <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                size=\"small\"\n              />\n            </Box>\n            <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                onClick={submitForm}\n                sx={{ marginRight: '16px' }}\n              >\n                Register\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  navigate('/');\n                }}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Form>\n        </Box>\n      )}\n    </Formik>\n  );\n};\n"],"names":["RegisterPage","dispatch","useDispatch","navigate","useNavigate","initialValues","name","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","authOperations","submitForm","isSubmitting","sx","padding","xs","sm","display","justifyContent","height","marginTop","component","TextField","type","label","size","variant","color","disabled","onClick","marginRight"],"sourceRoot":""}